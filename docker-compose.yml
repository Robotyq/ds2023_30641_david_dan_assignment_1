version: '3'

services:
  device-backend-container:
    image: devicebackendimg
    ports:
      - "8080:8080"
    environment:
      DB_IP: postgres-container
    depends_on:
      - postgres-container
    networks:
      - myNetwork

  user-backend-container:
    image: usersbackendimg
    ports:
      - "8081:8081"
    environment:
      DB_IP: postgres-container
      DEVICE_BACKEND_IP: device-backend-container
    depends_on:
      - postgres-container
    networks:
      - myNetwork

  front-container:
    image: frontimg
    ports:
      - "3000:3000"
    expose:
      - "3000"
    depends_on:
      - user-backend-container
      - device-backend-container
    networks:
      - myNetwork

  postgres-container:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: roota
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - myNetwork

  postgres2-container:
    image: postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: roota
    volumes:
      - monitoring_postgres_data:/var/lib/postgresql/data
    networks:
      - myNetwork

  monitoring-container:
    image: monitoringimg
    build:
      context: ./backend.monitoring
    ports:
      - "8082:8082"
    environment:
      DB_IP: postgres2-container
      DB_PORT: 5432
    depends_on:
      - postgres2-container
    networks:
      - myNetwork

networks:
  myNetwork:
    driver: bridge

volumes:
  postgres_data:
    external: true
  monitoring_postgres_data:
    external: true
