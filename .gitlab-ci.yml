stages:
  - build
  - test
  - deploy


#test:
#  stage: test
#  image: maven:3.3.9-jdk-8
#  script:
#    - echo "Test DEMO app"
#    - mvn test && mvn jacoco:report
#    - cat target/site/jacoco/index.html | grep -o '.*'
#  coverage: "/Total.*?([0-9]{1,3})%/"

build:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  script:
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

variables:
  APP_NAME: spring-demo-ds2020

production:
  image: docker:latest
  services:
    - docker:dind
  stage: deploy
  only:
    - docker_production
  before_script:
    - chmod 0400 $SSH_KEY
  script:
    - ssh -i $SSH_KEY -o StrictHostKeyChecking=no calincatalin99@35.243.255.80 "
      sudo rm -r ~/Chat || true &&
      mkdir Chat || true"
    - scp -r -i $SSH_KEY -o StrictHostKeyChecking=no ./Chat/db calincatalin99@35.243.255.80:~/Chat
    - scp -i $SSH_KEY -o StrictHostKeyChecking=no ./Chat/docker-compose.production.yml calincatalin99@35.243.255.80:~/Chat/
    - scp -i $SSH_KEY -o StrictHostKeyChecking=no ./Chat/script.sh calincatalin99@35.243.255.80:~/Chat/
    - ssh -i $SSH_KEY -o StrictHostKeyChecking=no calincatalin99@35.243.255.80 "
      docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY &&
      docker stop chat-backend || true &&
      docker rm chat-backend || true &&
      docker rmi $CI_REGISTRY_IMAGE:$IMAGE_TAG || true &&
      docker pull $CI_REGISTRY_IMAGE || true &&
      CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE IMAGE_TAG=$IMAGE_TAG docker-compose -f ~/Chat/docker-compose.production.yml up -d chat-app-backend &&
      bash ./Chat/script.sh chat-db db4"

